plugins {
    id 'java'
    id 'application'
    id 'org.jetbrains.kotlin.jvm' version '1.8.21'
    id 'org.jetbrains.kotlin.plugin.serialization' version '1.8.21'
    id 'org.openjfx.javafxplugin' version '0.0.12'
    id 'com.github.johnrengelman.shadow' version '8.1.1'
}

def progVersion = "1.0.3"
group 'io.github.deficuet'
version progVersion
mainClassName = "io.github.deficuet.alpa.MainApp"

javafx {
    version = "17.0.11"
    modules = ['javafx.controls', 'javafx.graphics']
}

repositories {
    maven { url "https://www.brockmann-consult.de/mvn/os/" }
    mavenCentral()
    maven { url 'https://jitpack.io' }
    maven {
        url "http://maven.geo-solutions.it/"
        allowInsecureProtocol = true
    }
}

dependencies {
    implementation "org.jetbrains.kotlinx:kotlinx-serialization-core"
    implementation 'no.tornado:tornadofx:1.7.20'
    implementation 'com.github.Deficuet:UnityKt:0.1.0_alpha.13'
    implementation 'net.mamoe.yamlkt:yamlkt:0.13.0'
    implementation 'org.json:json:20231013'
    implementation 'com.github.Deficuet:JImageUtils:0.0.6'
    implementation 'com.github.Deficuet:AdvancedJImageIO:0.0.3'
    implementation 'com.github.Deficuet:AzurlanePaintingUtils:1.0.3'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.9.2'
}

jar {
    manifest {
        attributes "Specification-Title": "Java Advanced Imaging Image I/O Tools"
        attributes "Specification-Version": "1.1"
        attributes "Specification-Vendor": "Sun Microsystems, Inc."
        attributes "Implementation-Title": "com.sun.media.imageio"
        attributes "Implementation-Version": "1.1"
        attributes "Implementation-Vendor": "Sun Microsystems, Inc."
    }
}

shadowJar {
    archiveBaseName.set("ALPA")
    archiveClassifier.set("")
    archiveVersion.set(progVersion)
    zip64 = true
}

test {
    useJUnitPlatform()
}

compileKotlin {
    kotlinOptions.jvmTarget = 17
}

compileTestKotlin {
    kotlinOptions.jvmTarget = 17
}